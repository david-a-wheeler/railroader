<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Railroader - Rails Security Scanner</title>
  <link href="https://railroader.org/atom.xml" rel="self"/>
  <link href="https://railroader.org/"/>
  <updated>2019-02-07T13:17:16-05:00</updated>
  <id>https://railroader.org/</id>
  <author>
    <name>David A. Wheeler (with previous work by Justin Collins)</name>
    
  </author>

  
  <entry>
    <title>Brakeman 4.3.1 Released</title>
    <link href="https://railroader.org/blog/2018/06/06/brakeman-4-dot-3-1-released/"/>
    <updated>2018-06-06T19:55:00-04:00</updated>
    <id>https://railroader.org/blog/2018/06/06/brakeman-4-dot-3-1-released</id>
    <content type="html">&lt;p&gt;Mostly false positive reduction and bug fixes in this one!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.3.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; to represent known-safe literals&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;Array#map&lt;/code&gt; and &lt;code&gt;Array#each&lt;/code&gt; over literal arrays (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1208&quot;&gt;#1208&lt;/a&gt; / &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1224&quot;&gt;#1224&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Use safe literal when accessing literal hash with unknown key (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1213&quot;&gt;#1213&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow &lt;code&gt;symbolize_keys&lt;/code&gt; to be called on &lt;code&gt;params&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve handling of conditionals in shell commands (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid deprecated use of ERB in Ruby 2.6 (&lt;a href=&quot;https://github.com/koic&quot;&gt;Koichi ITO&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;Object#freeze&lt;/code&gt;, use the target instead (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1211&quot;&gt;#1211&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;foreign_key&lt;/code&gt; calls in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1202&quot;&gt;#1202&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;included&lt;/code&gt; calls outside of classes/modules (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1209&quot;&gt;#1209&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix error when setting line number in implicit renders (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1210&quot;&gt;#1210&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Safe Literals&lt;/h3&gt;

&lt;p&gt;This version of Brakeman introduces a new way of handling &quot;known safe&quot; values (integers, string literals, etc.) where the &lt;em&gt;exact&lt;/em&gt; value is unknown. The uses of the values will be replaced with &lt;code&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; instead of actual values, as Brakeman had done previously. The new approach avoids some unhelpful side-effects and allows for more of this kind of thing in the future.&lt;/p&gt;

&lt;p&gt;These changes fix up a number of false positives.&lt;/p&gt;

&lt;h4&gt;Array Safe Literals&lt;/h4&gt;

&lt;p&gt;In situations like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&quot;hello&quot;, &quot;there&quot;].each do |s|
  something_with(s)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Brakeman will replace &lt;code&gt;s&lt;/code&gt; inside the block with &lt;code&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt;, since the value must be a string (or &lt;code&gt;nil&lt;/code&gt;, but Brakeman doesn't worrry about that).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Array#map&lt;/code&gt; and &lt;code&gt;Array#each&lt;/code&gt; are currently supported.&lt;/p&gt;

&lt;h4&gt;Hash Access with Unknown Key&lt;/h4&gt;

&lt;p&gt;In code like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;some_hash = { x: 1, y: 2}
result = some_hash[some_var]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Brakeman will replace &lt;code&gt;result&lt;/code&gt; with &lt;code&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; since the value must be an integer.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1227&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbolized Keys in Params&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;params.symbolize_keys&lt;/code&gt; in ActiveRecord methods will not be treated as dangerous.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1217&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Conditionals in Shell Commands&lt;/h3&gt;

&lt;p&gt;Use of interpolated &lt;code&gt;if&lt;/code&gt; expressions (or the ternary version) in shell commands is now handled better, thanks to &lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;. The values of the branches will be checked for dangerous values before warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1214&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Update ERB Use for Ruby 2.6&lt;/h3&gt;

&lt;p&gt;The interface for ERB will be &lt;a href=&quot;https://github.com/ruby/ruby/blob/2311087/NEWS#stdlib-updates-outstanding-ones-only&quot;&gt;updated in Ruby 2.6&lt;/a&gt;. &lt;a href=&quot;https://github.com/koic&quot;&gt;Koichi ITO&lt;/a&gt; provided a fix in preparation for this change.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1220&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Frozen Objects&lt;/h3&gt;

&lt;p&gt;Since the use of &lt;code&gt;freeze&lt;/code&gt; is of little interest to Brakeman and obscures the object it is freezing, these calls are now ignored.&lt;/p&gt;

&lt;p&gt;This, especially combined with the safe literals above, cleans up some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1230&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Foreign Keys in SQL&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore calls to &lt;code&gt;foreign_key&lt;/code&gt; in SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1229&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Not &lt;code&gt;Module#included&lt;/code&gt; Calls&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;included&lt;/code&gt; outside of modules/classes will be ignored instead of causing an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1228&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;70722056ed1b168e2a56baff048fa155948e1d214513f0debe9e2b78f82691f8  brakeman-4.3.1.gem
01078dd352a273965aa207dbffd01b8fe511d2302137f1984ea8bbddc38da3ce  brakeman-lib-4.3.1.gem
1497a934e0fe929d4b2685a3282e7976ebd75e901c56183601b5c528ff4021e0  brakeman-min-4.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.3.0 Released</title>
    <link href="https://railroader.org/blog/2018/05/10/brakeman-4-dot-3-0-released/"/>
    <updated>2018-05-10T15:36:00-04:00</updated>
    <id>https://railroader.org/blog/2018/05/10/brakeman-4-dot-3-0-released</id>
    <content type="html">&lt;p&gt;Did you know we recently broke &lt;a href=&quot;http://bestgems.org/gems/brakeman&quot;&gt;11 million gem downloads&lt;/a&gt;? Wow!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.2.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;--parser-timeout&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Improve timeout error messages&lt;/li&gt;
&lt;li&gt;Check exec-type calls even if they are targets (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1199&quot;&gt;#1199&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Index Kernel#` calls even if they are targets (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1183&quot;&gt;#1183&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BaseCheck#include_interp?&lt;/code&gt; should return first string interpolation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1189&quot;&gt;#1189&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;Process.pid&lt;/code&gt; in system calls&lt;/li&gt;
&lt;li&gt;Warn about dangerous &lt;code&gt;link_to&lt;/code&gt; href with &lt;code&gt;sanitize()&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1187&quot;&gt;#1187&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;params#to_h&lt;/code&gt; and &lt;code&gt;params#to_hash&lt;/code&gt; in SQL checks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1180&quot;&gt;#1180&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Convert &lt;code&gt;Array#join&lt;/code&gt; to string interpolation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1179&quot;&gt;#1179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;&quot;&quot;.freeze&lt;/code&gt; to just &lt;code&gt;&quot;&quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1182&quot;&gt;#1182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--color&lt;/code&gt; can be used to force color output (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1175&quot;&gt;#1175&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Track parent calls in call index&lt;/li&gt;
&lt;li&gt;Fix reported line numbers for CVE-2018-3741 and CVE-2018-8048&lt;/li&gt;
&lt;li&gt;Code Climate: omit leading dot from &lt;code&gt;only_files&lt;/code&gt; (&lt;a href=&quot;https://github.com/toddmazierski&quot;&gt;Todd Mazierski&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;&lt;code&gt;--color&lt;/code&gt; Option&lt;/h3&gt;

&lt;p&gt;Previously, &lt;code&gt;--no-color&lt;/code&gt; could be used to turn off ANSI color in text reports. Now, &lt;code&gt;--color&lt;/code&gt; can be used to force color output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1176&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;--parser-timeout&lt;/code&gt; Option&lt;/h3&gt;

&lt;p&gt;The default timeout for parsing a single file is 10 seconds. For some files, this may not be enough.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--parser-timeout&lt;/code&gt; option can be used to specify a per-file timeout (in seconds).&lt;/p&gt;

&lt;p&gt;Additionally, the error message for parsing timeouts has been improved considerably.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1194&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Command Injection Fixes&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt; reporting a number of issues around command injection, there are several improvements.&lt;/p&gt;

&lt;p&gt;Use of backticks as targets of a call will now be checked for command injection.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`blah #{something}` == &quot;expected output&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Previously, use of backticks was not being indexed in this case.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1185&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Somewhat similarly, other calls (such as &lt;code&gt;system&lt;/code&gt;) would not warn if they were targets of a call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1200&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code&gt;Process.pid&lt;/code&gt; in system calls.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/f9195312931caa49e369730a0798dad750150f76&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Also fixed an issue where searching for string interpolation would return the innermost instance instead of the first instance (typically you want the first one).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1195&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Freeze Calls&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;String#freeze&lt;/code&gt; will essentially be ignored.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;blah&quot;.freeze
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be treated like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;blah&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1188&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Strong Parameters in SQL&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;to_h&lt;/code&gt; and &lt;code&gt;to_hash&lt;/code&gt; on &lt;code&gt;params&lt;/code&gt; will be ignored in the context of SQL injection.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1191&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sanitize in &lt;code&gt;link_to&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will now warn on uses of &lt;code&gt;sanitize&lt;/code&gt; in attempts to avoid XSS in &lt;code&gt;link_to&lt;/code&gt;. Unfortunately, it does not work that way.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1192&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;Array#join&lt;/code&gt; to String Interpolation&lt;/h3&gt;

&lt;p&gt;Uses of &lt;code&gt;Array#join&lt;/code&gt; will now be converted to string interpolation.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1, thing, &quot;here&quot;].join(' ')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be changed to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;1 #{thing} here&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This both fixes some false positives and helps detect more vulnerabilities in checks that are looking at string interpolation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1198&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Parent Calls&lt;/h3&gt;

&lt;p&gt;Brakeman now tracks the parent method call (I'm sure there's a better way to say that) of an argument. While this ended up not being needed for this release, it will help improve checks and messages in the future.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1193&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;9284a1a9413743b4c915eda40312395e0ee574c6286893a27074b6f9527648f4  brakeman-4.3.0.gem
89ba3385fab967114c31da1462401c03caa8847d1115566a77039d0bda95181e  brakeman-lib-4.3.0.gem
1834031c1e949242ea6d08b3b1036d3f7c12c28257cdfa94cf3d0459b6f851b6  brakeman-min-4.3.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.2.1 Released</title>
    <link href="https://railroader.org/blog/2018/03/23/brakeman-4-dot-2-1-released/"/>
    <updated>2018-03-23T17:19:00-04:00</updated>
    <id>https://railroader.org/blog/2018/03/23/brakeman-4-dot-2-1-released</id>
    <content type="html">&lt;p&gt;This is a small release to add warnings for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tP7W3kLc5u4/uDy2Br7xBgAJ&quot;&gt;CVE-2018-3741&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;CVE-2018-8048&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please note there have been a number of vulnerabilities in the Rails HTML sanitization methods over the years. Only use sanitization when an application &lt;em&gt;must&lt;/em&gt; accept and render HTML from an untrusted source. Otherwise, escape outputs instead.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.2.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add warning for CVE-2018-3741&lt;/li&gt;
&lt;li&gt;Add warning for CVE-2018-8048&lt;/li&gt;
&lt;li&gt;Scan &lt;code&gt;app/jobs/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;template_exists?&lt;/code&gt; in controllers (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1124&quot;&gt;#1124&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;CVE-2018-3741&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tP7W3kLc5u4/uDy2Br7xBgAJ&quot;&gt;CVE-2018-3741&lt;/a&gt; is a vulnerability in the &lt;code&gt;rails-html-sanitizer&lt;/code&gt; gem which may allow bypassing attribute whitelists and therefore cross-site scripting.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1171&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2018-8048&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;CVE-2018-8048&lt;/a&gt; is a similar vulnerability in the &lt;code&gt;loofah&lt;/code&gt; gem.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1169&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Scan Jobs&lt;/h3&gt;

&lt;p&gt;Brakeman will now scan files in the &lt;code&gt;app/jobs/&lt;/code&gt; directory and treat them as additional libraries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1168&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Template Guard Condition&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about dynamic render paths if &lt;code&gt;template_exists?&lt;/code&gt; is used as a guard condition.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1170&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;A Note on Vulnerabilities in Depdendencies&lt;/h3&gt;

&lt;p&gt;Brakeman does not warn about &lt;em&gt;all&lt;/em&gt; CVEs in application dependencies. There are many better tools that track and detect vulnerable dependencies.&lt;/p&gt;

&lt;p&gt;Brakeman only includes warnings about vulnerabilities announced on the &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;Rails Security Mailing List&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3ba1cd39d98edcae7a0802ef0206de1438439cfdf4edb559c676877e2c253498  brakeman-4.2.1.gem
54a4aa336f3c21477a9bab12eeba6bb79ffa34a015e89a748621f7fd037d1943  brakeman-lib-4.2.1.gem
d53f2275320dfe5609234e74ce3a73a7d8c44dfae824fb938a9bae2077a9aecf  brakeman-min-4.2.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.2.0 Released</title>
    <link href="https://railroader.org/blog/2018/02/21/brakeman-4-dot-2-0-released/"/>
    <updated>2018-02-21T13:34:00-05:00</updated>
    <id>https://railroader.org/blog/2018/02/21/brakeman-4-dot-2-0-released</id>
    <content type="html">&lt;p&gt;First release of 2018!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.1.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handle ERb use of &lt;code&gt;String#&amp;lt;&amp;lt;&lt;/code&gt; method for Ruby 2.5 (&lt;a href=&quot;https://github.com/pocke&quot;&gt;Pocke&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Exclude template folders in &lt;code&gt;lib/&lt;/code&gt; (&lt;a href=&quot;https://github.com/Kani999&quot;&gt;kru0096&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Warn about SQL injection with &lt;code&gt;not&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Avoid warning about symbol DoS on &lt;code&gt;Model#attributes&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1096&quot;&gt;#1096&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about open redirects with model methods ending with &lt;code&gt;_path&lt;/code&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1117&quot;&gt;#1117&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about command injection with &lt;code&gt;Shellwords.escape&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1159&quot;&gt;#1159&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Use ivars from &lt;code&gt;initialize&lt;/code&gt; in libraries&lt;/li&gt;
&lt;li&gt;Fix multiple assignment of globals (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1155&quot;&gt;#1155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Sexp#body=&lt;/code&gt; can accept &lt;code&gt;:rlist&lt;/code&gt; from &lt;code&gt;Sexp#body_list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update RubyParser to 3.11.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Update ERb Handling for Ruby 2.5.0&lt;/h3&gt;

&lt;p&gt;The way ERb templates are compiled changed in Ruby 2.5.0 to use &lt;code&gt;String#&amp;lt;&amp;lt;&lt;/code&gt;, so Brakeman has been changed to accomodate.&lt;/p&gt;

&lt;p&gt;Please note ERb also changed such that &lt;code&gt;&amp;lt;% #&lt;/code&gt; is not supported in Ruby 2.5.0. It will be fixed in the next Ruby release, but the correct syntax is &lt;code&gt;&amp;lt;%#&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1149&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Exclude Template Folders&lt;/h3&gt;

&lt;p&gt;Files in &lt;code&gt;lib/**/templates&lt;/code&gt; will be ignored, since they are generally ERb files, not actually Ruby.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1143&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection with &lt;code&gt;not&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;In ActiveRecord, &lt;code&gt;not&lt;/code&gt; takes the same arguments as &lt;code&gt;where&lt;/code&gt;, making it just as vulnerable to SQL injection.&lt;/p&gt;

&lt;p&gt;Thank you to &lt;a href=&quot;https://twitter.com/jobertabma&quot;&gt;Jobert Abma&lt;/a&gt; for reporting this.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1152&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbol DoS False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code&gt;Model#attributes.symbolize_keys&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1165&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Open Redirect False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about open redirects with &lt;code&gt;Model#something_ending_in_path&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1164&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Shellwords Escaping&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about command injection when &lt;code&gt;Shellwords.escape&lt;/code&gt; and friends are used.&lt;/p&gt;

&lt;p&gt;Please note that user input in shell commands is rarely a good idea, even if escaped, since they can change the behavior of the program in unexpected ways. Many Linux tools have options that allow arbitrary code execution.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1162&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Use Initialized Environment in Libraries&lt;/h3&gt;

&lt;p&gt;When processing libraries, instance variables set in &lt;code&gt;initialize&lt;/code&gt; will be used in subsequent methods.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1161&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Update RubyParser&lt;/h3&gt;

&lt;p&gt;This release includes updated versions of RubyParser and friends. This may cause some warning fingerprints to change if they include a call to &lt;code&gt;self[...]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1160&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c6ad3861920075ccf553343815fcce07aa09d015bc8529c6e4d8a865674530f7  brakeman-4.2.0.gem
94a97496761ddd27974867bde3235cab303761dadec4bd6a8d22260a72aaaa38  brakeman-lib-4.2.0.gem
a071eb6d6e866df0338bcb9c8dd56f5b0d66c68212eb604f551ac8aa196d6923  brakeman-min-4.2.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.1.1 Released</title>
    <link href="https://railroader.org/blog/2017/12/18/brakeman-4-dot-1-1-released/"/>
    <updated>2017-12-18T23:16:00-05:00</updated>
    <id>https://railroader.org/blog/2017/12/18/brakeman-4-dot-1-1-released</id>
    <content type="html">&lt;p&gt;Just a small fix-up release!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.1.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove check for use of &lt;code&gt;permit&lt;/code&gt; with &lt;code&gt;*_id&lt;/code&gt; keys&lt;/li&gt;
&lt;li&gt;Avoid duplicate warnings about permitted attributes&lt;/li&gt;
&lt;li&gt;Avoid duplicate warnings about division by zero&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;7b65d6694b488aaa09e147f5a39d7e544385a11ec52ae93058b04b17999925b6  brakeman-4.1.1.gem
ffb525462d391f9a7f85b9b1ebbf7b165d03cd2eaed7093c3f1b4fdb135947e2  brakeman-lib-4.1.1.gem
b50a7b19d56a7606cd3a625611f8e720d47da8a57d126e7dcf443714cec98194  brakeman-min-4.1.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.1.0 Released</title>
    <link href="https://railroader.org/blog/2017/12/12/brakeman-4-dot-1-0-released/"/>
    <updated>2017-12-12T18:01:00-05:00</updated>
    <id>https://railroader.org/blog/2017/12/12/brakeman-4-dot-1-0-released</id>
    <content type="html">&lt;p&gt;Wow, it has been &lt;em&gt;too&lt;/em&gt; long since the last release!&lt;/p&gt;

&lt;p&gt;Happy December!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.0.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for dangerous keys in &lt;code&gt;permit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add optional check for divide by zero&lt;/li&gt;
&lt;li&gt;Remove errors about divide by zero&lt;/li&gt;
&lt;li&gt;Warn about dynamic values in &lt;code&gt;Arel.sql&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show better location for Sass errors (&lt;a href=&quot;https://github.com/abrom&quot;&gt;Andrew Bromwich&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about file access for temp files (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1110&quot;&gt;#1110&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid CSRF warning in Rails 5.2 default config (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1132&quot;&gt;#1132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better processing of &lt;code&gt;op_asgn1&lt;/code&gt; (e.g. &lt;code&gt;x[:y] += 1&lt;/code&gt;) (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1103&quot;&gt;#1103&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle nested destructuring/multiple assignment&lt;/li&gt;
&lt;li&gt;Do not warn on &lt;code&gt;params.permit&lt;/code&gt; with safe values (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1000&quot;&gt;#1000&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Use HTTPS for warning links&lt;/li&gt;
&lt;li&gt;Try to guess options for &lt;code&gt;less&lt;/code&gt; pager (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1118&quot;&gt;#1118&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Do not page if results fit on screen&lt;/li&gt;
&lt;li&gt;Leave results on screen after paging&lt;/li&gt;
&lt;li&gt;Fix upgrade version for CVE-2016-6316&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;include_paths&lt;/code&gt; for Code Climate engine (&lt;a href=&quot;https://github.com/wfleming&quot;&gt;Will Fleming&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support &lt;code&gt;app_path&lt;/code&gt; configuration for Code Climate engine (&lt;a href=&quot;https://github.com/noahd1&quot;&gt;Noah Davis&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Refactor Code Climate engine options parsing (&lt;a href=&quot;https://github.com/noahd1&quot;&gt;Noah Davis&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;New Check for Dangerous Permit Keys&lt;/h3&gt;

&lt;p&gt;Very similar to warning about potentially dangerous keys in &lt;code&gt;attr_accessible&lt;/code&gt;, Brakeman now warns about potentially dangerous keys whitelisted for mass assignment via &lt;code&gt;params.permit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1128&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Optional Check for Division by Zero&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman would report errors when it encountered potential division by zero. Now, it optionally reports warnings instead.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1122&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Arel.sql&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Arel.sql&lt;/code&gt; allows one to add raw SQL to queries. Brakeman now warns about potential SQL injection when using &lt;code&gt;Arel.sql&lt;/code&gt; with dynamic values.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1129&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sass Error Locations&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/abrom&quot;&gt;Andrew&lt;/a&gt;, Brakeman now reports actual file names for errors involving Sass.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1133&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Temp Files&lt;/h3&gt;

&lt;p&gt;Brakeman no longer warns about file access with &lt;code&gt;params[:blah].tempfile.path&lt;/code&gt; or &lt;code&gt;params[:blah].path&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1121&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails 5.2 CSRF Configuration&lt;/h3&gt;

&lt;p&gt;In Rails 5.2, CSRF protection is enabled by default. Brakeman will now respect this.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1138&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Attribute Combination Assignment&lt;/h3&gt;

&lt;p&gt;This release handles code like &lt;code&gt;x[:y] += 1&lt;/code&gt; better. Previously, it would not update the value for &lt;code&gt;x[:y]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1123&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Nested Destructuring&lt;/h3&gt;

&lt;p&gt;Brakeman now can handle nested multiple assignment, like &lt;code&gt;x, (a, b), y = z&lt;/code&gt;, assuming &lt;code&gt;z&lt;/code&gt; is known to be an array.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1113&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Pager Updates&lt;/h3&gt;

&lt;p&gt;The default pager (&lt;code&gt;less&lt;/code&gt;) now leaves the output in the terminal after exiting and now exits immediately if the output fits on the screen.&lt;/p&gt;

&lt;p&gt;Additionally, Brakeman attempts to detect if these options are actually supported by &lt;code&gt;less&lt;/code&gt; before using them.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1112&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1120&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2016-6316&lt;/h3&gt;

&lt;p&gt;In case this one was keeping you up at night, Brakeman now reports the correct upgrade version for CVE-2016-6316.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1105&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;HTTPS for Warning Links&lt;/h3&gt;

&lt;p&gt;Links to brakemanscanner.org in reports are now HTTPS! Only makes sense.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1114&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Code Climate Updates&lt;/h3&gt;

&lt;p&gt;The Brakeman engine on &lt;a href=&quot;https://docs.codeclimate.com/docs/brakeman&quot;&gt;Code Climate&lt;/a&gt; now supports &lt;code&gt;app_path&lt;/code&gt; and &lt;code&gt;include_paths&lt;/code&gt;, together.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1126&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1dd62ee8aa872acf5d0aace6dc0745b55c78da68640f04754bf11c12a58842bf  brakeman-4.1.0.gem
a16bd3082223655f132ff4c601f5d1930290082116fc256c5c1e652ff3ba933a  brakeman-lib-4.1.0.gem
29d9be77b06195675e6b803141da979438983c0970c182fe8b8ccf3145ecda9f  brakeman-min-4.1.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 4.0 Released!</title>
    <link href="https://railroader.org/blog/2017/09/25/brakeman-4-dot-0-released/"/>
    <updated>2017-09-25T06:31:00-04:00</updated>
    <id>https://railroader.org/blog/2017/09/25/brakeman-4-dot-0-released</id>
    <content type="html">&lt;p&gt;&lt;strong&gt;This release has breaking changes!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the 101st official release of Brakeman! It has been seven years and one month since the first release of Brakeman.
To put that into historical context, Rails 3.0 was released a few days later!&lt;/p&gt;

&lt;p&gt;How about some more numbers?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/brakeman&quot;&gt;7.6 million gem downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;14,093 lines of Ruby code (excluding tests)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/graphs/contributors&quot;&gt;2,937 commits from 74 contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;385 issues closed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thank you so much to everyone who has used, contributed to, or promoted Brakeman over the past seven years!&lt;/p&gt;

&lt;p&gt;As a token of our appreciation, we have a limited edition 2017 Brakeman sticker:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://railroader.org/images/brakeman_anniversary_sticker.png&quot; alt=&quot;Brakeman Sticker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just email stickers@brakeman.org with your name and address (anywhere in the world) and we'll send you one. While supplies last!&lt;/p&gt;

&lt;p&gt;&lt;small&gt;If you have benefited from Brakeman, please consider supporting continued development via &lt;a href=&quot;https://brakemanpro.com&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.7.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--exit-on-warn&lt;/code&gt; is now the default (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/852&quot;&gt;#852&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--exit-on-error&lt;/code&gt; is now the default (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1083&quot;&gt;#1083&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&quot;Plain&quot; report output is now the default&lt;/li&gt;
&lt;li&gt;Add simple pager for reports output to terminal&lt;/li&gt;
&lt;li&gt;Remove low confidence mass assignment warnings&lt;/li&gt;
&lt;li&gt;Reduce warnings about XSS in &lt;code&gt;link_to&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;request.cookies&lt;/code&gt; like &lt;code&gt;cookies&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1090&quot;&gt;#1090&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;fail&lt;/code&gt;/&lt;code&gt;raise&lt;/code&gt; like early returns (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/754&quot;&gt;#754&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Rename &quot;Cross Site Scripting&quot; to &quot;Cross-Site Scripting&quot; (&lt;a href=&quot;https://github.com/paultetreau&quot;&gt;Paul Tetreau&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Remove reliance on &lt;code&gt;CONFIDENCE&lt;/code&gt; constant in checks&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;--exit-on-error&lt;/code&gt; and &lt;code&gt;--exit-on-warn&lt;/code&gt; in config files&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Changes since 4.0.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not use pager when &lt;code&gt;CI&lt;/code&gt; environment variable is set&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;New Default Exit Codes&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;--exit-on-warn&lt;/code&gt; and &lt;code&gt;--exit-on-error&lt;/code&gt; are now default behavior.&lt;/p&gt;

&lt;p&gt;If any warnings are found or errors are raised during the scan, Brakeman's exit code will be non-zero. This may break things! In particular, CI jobs or scripts that assume Brakeman will exit normally.&lt;/p&gt;

&lt;p&gt;You may use &lt;code&gt;--no-exit-on-warn&lt;/code&gt; and &lt;code&gt;--no-exit-on-error&lt;/code&gt; to revert back to previous behavior and always exit with error code 0.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1085&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1086&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Default Report Format&lt;/h3&gt;

&lt;p&gt;The &quot;plain&quot; report format is now the default.&lt;/p&gt;

&lt;p&gt;To revert back to the table format, use &lt;code&gt;-f tables&lt;/code&gt; or &lt;code&gt;-o report.tables&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1084&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Paged Output&lt;/h3&gt;

&lt;p&gt;By default, output to the terminal will be paged with &lt;code&gt;less&lt;/code&gt; or Highline's simple pager.&lt;/p&gt;

&lt;p&gt;To disable, use &lt;code&gt;--no-pager&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In 4.0.1 Brakeman will automatically disable the pager when the &lt;code&gt;CI&lt;/code&gt; environment variable is set to &lt;code&gt;true&lt;/code&gt;. This should be compatible with Travis CI, Circle CI, Codeship, and Bitbucket Pipelines.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1098&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer Mass Assignment Warnings&lt;/h3&gt;

&lt;p&gt;Low confidence mass assignment warnings have been removed in this release. Brakeman should now only warn when user input is used directly in the instantiation or update of a model.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1087&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer &lt;code&gt;link_to&lt;/code&gt; Warnings&lt;/h3&gt;

&lt;p&gt;Warnings about XSS in &lt;code&gt;link_to&lt;/code&gt; have confused quite a few people over the years. The danger is that links may have &lt;code&gt;javascript:&lt;/code&gt; or &lt;code&gt;data:&lt;/code&gt; values with XSS payloads.&lt;/p&gt;

&lt;p&gt;Brakeman should now only warn when directly using user input or when using what looks like a URL from the database.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1093&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Cookies&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;request.cookies&lt;/code&gt; will now be treated like cookies in general.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1094&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Early Returns&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;raise&lt;/code&gt; or &lt;code&gt;fail&lt;/code&gt; will be treated like early returns when considering simple guard expressions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1089&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Cross-Site Scripting&lt;/h3&gt;

&lt;p&gt;Messages about &quot;Cross Site Scripting&quot; will now include a hyphen. This does not affect warning fingerprints.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/936&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CONFIDENCE&lt;/h3&gt;

&lt;p&gt;Brakeman checks previously used the &lt;code&gt;CONFIDENCE&lt;/code&gt; hash when creating warnings, e.g. &lt;code&gt;:confidence =&amp;gt; CONFIDENCE[:high]&lt;/code&gt;. Now it's possible to use &lt;code&gt;:confidence =&amp;gt; :high&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;For those with custom checks, the &lt;code&gt;CONFIDENCE&lt;/code&gt; hash is still available and nothing should break.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1088&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for these releases are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0038932b43dcf2bf698ad6637500f69b5e4226b10c011a4a6bcce93a77a5e045  brakeman-4.0.0.gem
3688303859a7c9b452ddcef00f00f97789ce103774446d42851a763ecbf8df87  brakeman-lib-4.0.0.gem
559196c6e41e5b180448564d9aca84fb775a39b77dd7d8d880a0ce0e77df8ae2  brakeman-min-4.0.0.gem

d93d6f8e9c2655520153fe0512b338753cc36fac56b80947f652fd33e9f80dfb  brakeman-4.0.1.gem
82ab1e51f712ad10109a4fe080f6389b28bbbef83e0ecd6c33defa90319b4bc5  brakeman-lib-4.0.1.gem
579f240cb8e5357fe5e45c09eb43f3512481f7086052337437e5c436c617da8b  brakeman-min-4.0.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.7.1/3.7.2 Released</title>
    <link href="https://railroader.org/blog/2017/08/15/brakeman-3-dot-7-1-released/"/>
    <updated>2017-08-15T23:38:00-04:00</updated>
    <id>https://railroader.org/blog/2017/08/15/brakeman-3-dot-7-1-released</id>
    <content type="html">&lt;p&gt;Just a little release. Next up: 4.0!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.7.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix &lt;code&gt;--ensure-latest&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1079&quot;&gt;David Guyon&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.7.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handle simple guard with &lt;code&gt;return&lt;/code&gt; at end of branch (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1073&quot;&gt;#1073&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add more collection methods for iteration detection&lt;/li&gt;
&lt;li&gt;Modularize &lt;code&gt;bin/brakeman&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Improve multi-value &lt;code&gt;Sexp&lt;/code&gt; error message&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby2ruby&lt;/code&gt; and &lt;code&gt;ruby_parser&lt;/code&gt; dependencies&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Another Simple Guard&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle when the branch in a simple guard condition ends in &lt;code&gt;return&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unless [:valid, :value].include? params[:x]
  do_stuff
  more_stuff
  return
end

x.send(params[:x]) # Will no longer warn because `params[:x]` must be 'safe'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1077&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Collection Methods&lt;/h3&gt;

&lt;p&gt;Brakeman attempts to detect when a template is iterating over records from a database query.&lt;/p&gt;

&lt;p&gt;This release adds a few more methods that might return a collection of records.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1074&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Modularize Commandline&lt;/h3&gt;

&lt;p&gt;The logic in the &lt;code&gt;brakeman&lt;/code&gt; executable has now entirely been moved to &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/49f675a88ba12ad4fa799770f5499c952650a56c/lib/brakeman/commandline.rb&quot;&gt;&lt;code&gt;Brakeman::Commandline&lt;/code&gt;&lt;/a&gt; for easier testing and custom behavior.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1076&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;9ad563247cc6a57b965e59e5bbbaefa202ce34ceb6d10e97ce500406d60cdb6e  brakeman-3.7.2.gem
5b753206f8e5937c33494edd323a9e6573e07958d9f8f5bb662b0f6085eafe19  brakeman-lib-3.7.2.gem
517a074cb92ece8a7e426ea221d63ddbcae6e3b851664083b7e73e6d7e0dd138  brakeman-min-3.7.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Brakeman 4.0 Plans&lt;/h3&gt;

&lt;p&gt;If all goes well, Brakeman 4.0 will be released on August 27th, which is also the 7th anniversary of Brakeman's first release. It will also be the 101st release of Brakeman!&lt;/p&gt;

&lt;p&gt;At least two major changes will be coming in Brakeman 4.0:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;plain&lt;/code&gt; report format will be the default instead of tables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--exit-on-warn&lt;/code&gt; (sets exit code if any warnings are found) will be on by default&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There will likely be other changes, but these two will be the most obvious.&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.7.0 Released</title>
    <link href="https://railroader.org/blog/2017/06/29/brakeman-3-dot-7-0-released/"/>
    <updated>2017-06-29T18:00:00-04:00</updated>
    <id>https://railroader.org/blog/2017/06/29/brakeman-3-dot-7-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.6.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid interpolating hashes/arrays on failed access (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/921&quot;&gt;#921&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positive for &lt;code&gt;redirect_to&lt;/code&gt; in Rails 4 (&lt;a href=&quot;https://github.com/mario-areias&quot;&gt;Mário Areias&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show progress indicator in interactive mode (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1012&quot;&gt;#1012&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle simple conditional guards that use &lt;code&gt;return&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1057&quot;&gt;#1057&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve support for &lt;code&gt;rails4&lt;/code&gt;/&lt;code&gt;rails5&lt;/code&gt; options in config file (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1059&quot;&gt;#1059&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Updated RubyParser to master&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Performance Improvement with Hash/Array Accesses&lt;/h3&gt;

&lt;p&gt;When Brakeman sees a hash or array access that it cannot resolve (i.e. can't find the value for the key), it will no longer copy the entire hash/array value to the call site.&lt;/p&gt;

&lt;p&gt;For some applications, this will significantly improve performance.&lt;/p&gt;

&lt;p&gt;This may cause some warning fingerprints to change.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1056&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Unsafe Hash in Redirects&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/mario-areias&quot;&gt;Mário Areias&lt;/a&gt;, Brakeman correctly handles &lt;code&gt;to_unsafe_hash&lt;/code&gt; and &lt;code&gt;to_unsafe_h&lt;/code&gt; in &lt;code&gt;redirect_to&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1029&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Progress Indicator in Interactive Mode&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;-I&lt;/code&gt; to manage false positives, Brakeman will now show how far you are through the warnings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75613/27519704-f7c60006-59ad-11e7-82e8-ce0e096ad678.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1064&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Simple Guards with Return&lt;/h3&gt;

&lt;p&gt;Brakeman can now recognize &lt;em&gt;simple&lt;/em&gt; guard conditions such as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return unless [:safe, :values].include? params[:x]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1062&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails Version Option in Brakeman Configuration&lt;/h3&gt;

&lt;p&gt;It is now possible to specify just &lt;code&gt;:rails4: true&lt;/code&gt; or &lt;code&gt;:rails5: true&lt;/code&gt; in a Brakeman configuration file.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1066&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Updated RubyParser&lt;/h3&gt;

&lt;p&gt;The main &lt;code&gt;brakeman&lt;/code&gt; gem bundles as-of-yet unreleased changes in RubyParser. This includes &quot;squiggly heredoc&quot; support (&lt;code&gt;&amp;lt;&amp;lt;~&lt;/code&gt;), improved line numbers, and a few other fixes.&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f46550d7c7827644a5663ccc10a6ca222e2534648f68630e3a777cb73df59824  brakeman-3.7.0.gem
0ea5359ae802284695500b92a03bf1d022574953a0da44607ff7f715f456c37e  brakeman-min-3.7.0.gem
f6f17e9f1f71a68b486d68f2b3413607fb47154a0fb6a6da23d9d7be87f37967  brakeman-lib-3.7.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.2 Released</title>
    <link href="https://railroader.org/blog/2017/05/19/brakeman-3-dot-6-2-released/"/>
    <updated>2017-05-19T09:01:00-04:00</updated>
    <id>https://railroader.org/blog/2017/05/19/brakeman-3-dot-6-2-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.6.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;--rake&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;By default, do not honor additional check paths in config&lt;/li&gt;
&lt;li&gt;Properly handle template names without &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Catch YAML parsing errors in session settings check (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1046&quot;&gt;#1046&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better handling of &lt;code&gt;if&lt;/code&gt; expressions in HAML rendering (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1032&quot;&gt;#1032&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about SQLi with &lt;code&gt;to_s&lt;/code&gt; in &lt;code&gt;exists?&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1045&quot;&gt;#1045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle safe call operator in checks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1031&quot;&gt;#1031&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle empty &lt;code&gt;if&lt;/code&gt; expressions when finding return values&lt;/li&gt;
&lt;li&gt;Set template file names during rendering for better errors&lt;/li&gt;
&lt;li&gt;Limit Slim dependency to before 3.0.8&lt;/li&gt;
&lt;li&gt;Update RubyParser to 3.9.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Rake Option Removed&lt;/h3&gt;

&lt;p&gt;The Rake task generated by &lt;code&gt;--rake&lt;/code&gt; has caused quite a few problems. When Rake is run with a Rails application, it loads all of the app's dependencies, which may conflict with Brakeman's dependencies.&lt;/p&gt;

&lt;p&gt;It is recommended to either not use a Rake task to run Brakeman or just shell out to Brakeman instead of using it as a library.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1038&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check Paths in Config Files&lt;/h3&gt;

&lt;p&gt;Brakeman allows loading custom checks with &lt;code&gt;--add-checks-path&lt;/code&gt;.
To avoid silently loading arbitary code, Brakeman will not support this option in configuration files unless explicitly enabled with &lt;code&gt;--allow-check-paths-in-config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1052&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Templates without Format Extension&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;http://brakemanscanner.org/blog/2017/01/31/brakeman-3-dot-5-0-released/&quot;&gt;3.5.0 release&lt;/a&gt; added support for templates with a bare extension (like &lt;code&gt;my_template.haml&lt;/code&gt;) but template names derived internally did not handle these bare extensions properly. When rendering templates, Brakeman was not able to match render names to the correct files.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1041&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;YAML Errors&lt;/h3&gt;

&lt;p&gt;When checking session settings, Brakeman parses &lt;code&gt;config/secrets.yml&lt;/code&gt;. Sometimes this file has unsafe values or interpolated code which causes the parsing to fail. Brakeman will now only output a notice about this failure instead of an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1047&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;If Expressions in HAML&lt;/h3&gt;

&lt;p&gt;Typically Brakeman assumes all &lt;code&gt;if&lt;/code&gt; branches in templates are taken and ignores the condition. This was not happening in all cases in rendered HAML templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1035/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;to_s&lt;/code&gt; False Positive with &lt;code&gt;exists?&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about arguments calling &lt;code&gt;to_s&lt;/code&gt; in &lt;code&gt;exists?&lt;/code&gt;, since that is the recommended way to avoid SQL injection with that particular method.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1049&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Safe Call Handling&lt;/h3&gt;

&lt;p&gt;The safe call operation &lt;code&gt;&amp;amp;.&lt;/code&gt; will be handled better in all checks instead of being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1033&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Empty Ifs&lt;/h3&gt;

&lt;p&gt;This release fixes an issue when finding return values from methods ending in an empty &lt;code&gt;if&lt;/code&gt; expression.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1053&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Template Names&lt;/h3&gt;

&lt;p&gt;Template file names will now be set when passing code to template rendering libraries, in order to produce better error messages when something goes wrong.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1042&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;RubyParser has been updated to &lt;code&gt;3.9.0&lt;/code&gt; which resolves some issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1048&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Slim is limited to &lt;code&gt;&amp;lt;3.0.8&lt;/code&gt; since the &lt;code&gt;3.0.8&lt;/code&gt; gem requires Ruby 2.0.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1050&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ba89440a5e94f463ad9b6f3602e83d16313857753a5cc9b754757bd3e58e2202  brakeman-3.6.2.gem
adae09f9aa3a4d311fe2de41fee5d9b821eff600c1c05e314b3b930adb85b4d7  brakeman-min-3.6.2.gem
d3da0a86dedcee84c35a14e00b7a9d22874aed89d7d031d1fe60b68ce4ae7c7a  brakeman-lib-3.6.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.1 Released</title>
    <link href="https://railroader.org/blog/2017/03/24/brakeman-3-dot-6-1-released/"/>
    <updated>2017-03-24T13:15:00-04:00</updated>
    <id>https://railroader.org/blog/2017/03/24/brakeman-3-dot-6-1-released</id>
    <content type="html">&lt;p&gt;This is a small bug fix release to fix an issue when using &lt;code&gt;--compare&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.6.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;Fix error when using &lt;code&gt;--compare&lt;/code&gt; (&lt;a href=&quot;https://github.com/seangransee&quot;&gt;Sean Gransee&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Error With Compare&lt;/h3&gt;

&lt;p&gt;Although comparison scans using &lt;code&gt;--compare&lt;/code&gt; would complete successfully, an exception was being thrown afterwards.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/anthlam&quot;&gt;Anthony Lamorte&lt;/a&gt; for reporting and &lt;a href=&quot;https://github.com/seangransee&quot;&gt;Sean Gransee&lt;/a&gt; for the fix!&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1024&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3c10b2a9fd8b7b3baab956e6fcc2c7780768f1905433297e8dd940591f1bbb3b  brakeman-3.6.1.gem
98f6bd7531e0e3fbe273b9d185446bd28602176a392d5df8f9c52c36460afdaa  brakeman-lib-3.6.1.gem
44342c843867fce585f6fef09cd093a0544510adfeec15217efe44c6120e3192  brakeman-min-3.6.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.0 Released</title>
    <link href="https://railroader.org/blog/2017/03/22/brakeman-3-dot-6-0-released/"/>
    <updated>2017-03-22T10:30:00-04:00</updated>
    <id>https://railroader.org/blog/2017/03/22/brakeman-3-dot-6-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.5.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Branch inside of &lt;code&gt;case&lt;/code&gt; expressions (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/944&quot;&gt;#944&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/972&quot;&gt;#972&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1002&quot;&gt;#1002&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check targetless SQL calls outside of known models&lt;/li&gt;
&lt;li&gt;Fix issue with nested interpolation inside SQL strings (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1008&quot;&gt;#1008&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--exit-on-error&lt;/code&gt; (&lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only report CVE-2015-3227 when exact version is known (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/993&quot;&gt;#933&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/995&quot;&gt;#995&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Print command line option errors without modification (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1010&quot;&gt;#1010&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore GraphQL tags inside ERB templates&lt;/li&gt;
&lt;li&gt;Avoid recursive &lt;code&gt;Concern&lt;/code&gt;s&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Case Expressions&lt;/h3&gt;

&lt;p&gt;At long last, Brakeman will now treat &lt;code&gt;case&lt;/code&gt; expressions similarly to &lt;code&gt;if&lt;/code&gt;s. This includes tracking variable assignments inside of &lt;code&gt;when&lt;/code&gt; clauses and better handling &lt;code&gt;case&lt;/code&gt; expressions as values.&lt;/p&gt;

&lt;p&gt;Note that at this time Brakeman does not handle nested &lt;code&gt;case&lt;/code&gt; expressions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1018&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Targetless SQL Calls&lt;/h3&gt;

&lt;p&gt;Brakeman 3.5.0 broadened the check for SQL injection to calls that &lt;em&gt;may&lt;/em&gt; not be on models (because models are often defined outside the application). However, calls with no target were still checking to see if they were called inside of model classes. This led to missing some SQL injection vulnerabilities.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/994&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Nested SQL Interpolation&lt;/h3&gt;

&lt;p&gt;Some cases of nested string interpolation in SQL calls were generating false positives. This should be fixed now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1009&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Exit on Errors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt; added the &lt;code&gt;--exit-on-error&lt;/code&gt; option to cause Brakeman to exit with a non-zero exit code if any errors are encountered. Normally Brakeman attempts to always generate a report regardless of any errors during the scan.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/991&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Spurious CVE Warning&lt;/h3&gt;

&lt;p&gt;Brakeman was reporting CVE-2015-3227 on any application using an unknown Rails version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/996&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option Errors&lt;/h3&gt;

&lt;p&gt;In an attempt to make command line option errors prettier, Brakeman was inadvertently messing up the error messages. It will no longer do so.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1011&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;GraphQL in ERB&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore &lt;code&gt;&amp;lt;%graphql&lt;/code&gt; tags in ERB templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/997&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Recursive Concerns&lt;/h3&gt;

&lt;p&gt;Concerns that &lt;code&gt;include&lt;/code&gt; themselves will no longer cause infinite loops.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1019&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c9bcc82a14359fe5f010551b1256eb1cea6848115f3429c7db74a386d6b0cf8c  brakeman-3.6.0.gem
4793a407f79970a284474db3235d355f9927e987b71e33f1ce99fac3f3c249aa  brakeman-min-3.6.0.gem
5c0a7aab7fc14d069d9dc208b653e10f71c355cb959fd144d6e8f7430c88a8e7  brakeman-lib-3.6.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.5.0 Released</title>
    <link href="https://railroader.org/blog/2017/01/31/brakeman-3-dot-5-0-released/"/>
    <updated>2017-01-31T23:30:00-05:00</updated>
    <id>https://railroader.org/blog/2017/01/31/brakeman-3-dot-5-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.4.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about SQL injection even if target is not known ActiveRecord model&lt;/li&gt;
&lt;li&gt;Avoid warning about models as SQL injection (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/655&quot;&gt;#655&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/680&quot;&gt;#680&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/833&quot;&gt;#833&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about SQLi in &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, or &lt;code&gt;last&lt;/code&gt; after Rails 4.0&lt;/li&gt;
&lt;li&gt;Treat templates without &lt;code&gt;.html&lt;/code&gt; as HTML anyway (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/790&quot;&gt;#790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Report check name in JSON and plain reports (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/971&quot;&gt;#971&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--ensure-latest&lt;/code&gt; option (&lt;a href=&quot;https://github.com/tamgrosser&quot;&gt;tamgrosser&lt;/a&gt; / &lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--no-summary&lt;/code&gt; to hide summaries in HTML/text reports (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/963&quot;&gt;#963&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fail on invalid checks specified by &lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/970&quot;&gt;#970&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;included&lt;/code&gt; block in concerns (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/958&quot;&gt;#958&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Updated RubyParser/Ruby2Ruby dependencies&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;SQL Injection Improvements&lt;/h3&gt;

&lt;p&gt;This release includes several changes to the SQL Injection check.&lt;/p&gt;

&lt;p&gt;First, Brakeman will no longer restrict SQL injection warnings to calls on known ActiveRecord models. While this may lead to a few false positives, there were too many reports of obvious SQL injection being missed. This reverses a decision made previously. Warnings that may involve non-models are given a lower confidence.&lt;/p&gt;

&lt;p&gt;Next, SQL that includes calls on model targets will no longer generate warnings. There were too many false positives and no known vulnerabilities flagged by this.&lt;/p&gt;

&lt;p&gt;Finally, Brakeman will no longer check calls to &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, and &lt;code&gt;last&lt;/code&gt; as they changed in Rails 4.1.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/985&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Extensionless Templates&lt;/h3&gt;

&lt;p&gt;Templates which do not specify any extension (e.g. just &lt;code&gt;.erb&lt;/code&gt; instead of &lt;code&gt;.html.erb&lt;/code&gt;) will still be treated as HTML instead of being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/980&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check Name in Reports&lt;/h3&gt;

&lt;p&gt;The plain and JSON reports now include the name of the check that generated the warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/981&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Enforce Latest Brakeman&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--ensure-latest&lt;/code&gt; option has been added. If there is a newer version of Brakeman available, this option will cause Brakeman to exit with a non-zero exit code.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/974&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Hide Summary&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;--no-summary&lt;/code&gt; and either the plain or &quot;table&quot; output, Brakeman will only report warnings, no metadata. Probably most useful in combination with &lt;code&gt;--quiet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/976&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fail on Invalid Checks&lt;/h3&gt;

&lt;p&gt;When use &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;-x&lt;/code&gt; to control which checks are run, Brakeman will now fail if the options supplied do not match existing check names. &lt;code&gt;-t None&lt;/code&gt; may be used to avoid running any checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/986&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle Included Concerns&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle the &lt;code&gt;included&lt;/code&gt; block in Concerns. Additionally, to support this, Concerns are processed prior to other classes.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/966&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;49fd8b3e6c1f348304bdbfc3b5d4cfbd465a5b5d4feec8337bbe3df7836787be  brakeman-3.5.0.gem
2ef50a61ca4aa1cff1f28dfe6308ea53157d996975519f5ae5c9266bf5772fb0  brakeman-min-3.5.0.gem
766c9da778e3be36ca709e637276f090514dbc0ddde5e261a1baff6da351480e  brakeman-lib-3.5.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.4.1 Released</title>
    <link href="https://railroader.org/blog/2016/11/02/brakeman-3-dot-4-1-released/"/>
    <updated>2016-11-02T13:07:00-04:00</updated>
    <id>https://railroader.org/blog/2016/11/02/brakeman-3-dot-4-1-released</id>
    <content type="html">&lt;ul&gt;
&lt;li&gt;Configurable engines path (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check CSRF setting in direct subclasses of &lt;code&gt;ActionController::Base&lt;/code&gt; (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Pull Ruby version from &lt;code&gt;.ruby-version&lt;/code&gt; or Gemfile&lt;/li&gt;
&lt;li&gt;Use Ruby version to turn off SymbolDoS check (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/928&quot;&gt;#928&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix ignoring link interpolation not at beginning of string (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/939&quot;&gt;#939&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show action help at start of interactive ignore (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/949&quot;&gt;#949&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;where_values_hash&lt;/code&gt; in SQLi (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/942&quot;&gt;#942&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Engine Paths Option&lt;/h3&gt;

&lt;p&gt;Thanks to the work of Jason Yeo, Brakeman now supports custom paths to Rails engines uses the &lt;code&gt;--add-engines-path&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;Multiple comma-separated paths may be configured. To include all subdirectories, use &lt;code&gt;*&lt;/code&gt; (e.g. &lt;code&gt;my_engines/*&lt;/code&gt;). Absolute paths may be used for engines outside the application.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/948&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Expanded CSRF Check&lt;/h3&gt;

&lt;p&gt;Also thanks to Jason Yeo, any controller with &lt;code&gt;ActionController::Base&lt;/code&gt; as a direct parent will be checked for a &lt;code&gt;protect_from_forgery&lt;/code&gt; call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/953&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ruby Version Info&lt;/h3&gt;

&lt;p&gt;Brakeman will now pull information about the Ruby version used for an application either from the &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;.ruby-version&lt;/code&gt;. Right now this is only used for disabling (the already optional) Symbol DoS check for versions of Ruby that have symbol garbage collection.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/947&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Link Interpolation False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman's warning about interpolating user input into URLs has always checked to see if the interpolation was at the beginning of the string. However, that check didn't work if the first thing in the string was another interpolation. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/940&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Help in Interactive Ignore&lt;/h3&gt;

&lt;p&gt;For clarity, &quot;interactive ignore&quot; mode will now display the action options before going through each warning.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/19423195/e1d4846c-93d2-11e6-9e07-92ffdf545dbd.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/950&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.4.0 Released</title>
    <link href="https://railroader.org/blog/2016/09/07/brakeman-3-dot-4-0-released/"/>
    <updated>2016-09-07T13:55:00-04:00</updated>
    <id>https://railroader.org/blog/2016/09/07/brakeman-3-dot-4-0-released</id>
    <content type="html">&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Oops! Brakeman&amp;#39;s 6th birthday was August 27th! 🎉 6 years, 61 contributors, 91 releases, 3.3 million gem downloads 🎉&lt;/p&gt;&amp;mdash; Brakeman Scanner (@brakeman) &lt;a href=&quot;https://twitter.com/brakeman/status/772844048402964481&quot;&gt;September 5, 2016&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;https://railroader.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.3.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show obsolete ignore entries in reports (&lt;a href=&quot;https://github.com/jcheatham&quot;&gt;Jonathan Cheatham&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add option to prune ignore file with &lt;code&gt;-I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add new &lt;code&gt;plain&lt;/code&gt; report format (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/914&quot;&gt;#914&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support creating reports in non-existent paths (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/924&quot;&gt;#924&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--no-exit-warn&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/925&quot;&gt;#925&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved Slim template support&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Obsolete Ignore Entries&lt;/h3&gt;

&lt;p&gt;The &quot;ignore&quot; configuration file can sometimes grow large due to stale entries that no longer correspond to existing warnings. Thanks to &lt;a href=&quot;https://github.com/jcheatham&quot;&gt;Jonathan Cheatham&lt;/a&gt;, these obsolete entires will now be noted in the default and JSON reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/894&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;When using the &lt;code&gt;-I&lt;/code&gt; option it is now possible to prune the ignore file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18257206/f9631f9a-7374-11e6-92bc-94b9d3a635f4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18257236/6868e726-7375-11e6-8a5b-30b6baed093a.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/934&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Report Format&lt;/h3&gt;

&lt;p&gt;This release adds a new &quot;plain text&quot; report format. It will eventually replace the default &quot;table&quot; report in Brakeman 4.0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18259647/329a3da4-739b-11e6-8258-b7ab2073483b.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To output in the new format, use &lt;code&gt;-f plain&lt;/code&gt; or &lt;code&gt;-o report.plain&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The color codes should be disabled automatically if outputing to a file, but &lt;code&gt;--no-color&lt;/code&gt; can be used to turn colors off.&lt;/p&gt;

&lt;p&gt;Feedback on the new report format is encouraged prior to the 4.0 release.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/935&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Report Paths&lt;/h3&gt;

&lt;p&gt;If the specified output file is in a non-existent path, Brakeman will now attempt to create the path before writing out the report.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/927&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;No Exit Code on Warnings&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;--no-exit-warn&lt;/code&gt; has been added to complement &lt;code&gt;--exit-warn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/926&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Improved Slim Support&lt;/h3&gt;

&lt;p&gt;Most users will not notice any changes, but internally Slim templates are handled a bit better.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/932&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/931&quot;&gt;more&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0cfd4b9cb8515ed9cbd254710761bfc409c604f3351e200b22955a1c3f93f8d8  brakeman-3.4.0.gem
7d07d87aa0732465bb6f0c17279f78edcfd0b1d841ddb63a95529ba762841395  brakeman-min-3.4.0.gem
e3d61c1de5549984a0d9eb3a3a53a4ef17b1b41db1be7d504237dd05a0cfa203  brakeman-lib-3.4.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.4/3.3.5 Released</title>
    <link href="https://railroader.org/blog/2016/08/12/brakeman-3-dot-3-4-released/"/>
    <updated>2016-08-12T08:26:00-04:00</updated>
    <id>https://railroader.org/blog/2016/08/12/brakeman-3-dot-3-4-released</id>
    <content type="html">&lt;p&gt;This is a quick release to add warnings for &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/8B2iV2tPRSE/JkjCJkSoCgAJ&quot;&gt;CVE-2016-6316&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/WccgKSKiPZA/9DrsDVSoCgAJ&quot;&gt;CVE-2016-6317&lt;/a&gt;. There was a bug in 3.3.4 that affected debug output which has been fixed in 3.3.5.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.3.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add generic warning for CVE-2016-6316&lt;/li&gt;
&lt;li&gt;Warn about dangerous use of &lt;code&gt;content_tag&lt;/code&gt; with CVE-2016-6316&lt;/li&gt;
&lt;li&gt;Add warning for CVE-2016-6317&lt;/li&gt;
&lt;li&gt;Use Minitest&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.3.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix bug in reports when using &lt;code&gt;--debug&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;CVE-2016-6316&lt;/h3&gt;

&lt;p&gt;Typically Rails will escape attribute values passed to tag helpers like &lt;code&gt;content_tag&lt;/code&gt;. If the attribute has already been marked as &quot;safe&quot; with &lt;code&gt;.html_safe&lt;/code&gt; or (more likely) a different escaping helper like &lt;code&gt;sanitize&lt;/code&gt;, the tag helper will not escape the value again (that is the purpose of &lt;code&gt;.html_safe&lt;/code&gt;). However, not all sanitizers/escape methods escape double quotes, which are dangerous inside of tag attributes. In particular, double quotes allow an attacker to close the current attribute and insert new attributes (like &lt;code&gt;onmouseover&lt;/code&gt;) that can execute JavaScript.&lt;/p&gt;

&lt;p&gt;Brakeman will issue a generic warning about CVE-2016-6316 for affected versions and may generate warnings for potentially dangerous calls to &lt;code&gt;content_tag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/917&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2016-6317&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;JSON bug&lt;/a&gt; is back. Specially-crafted queries can cause parameters to be interpreted as empty hashes, which may cause unexpected behavior in SQL queries.&lt;/p&gt;

&lt;p&gt;Brakeman will generate a generic warning for affected versions (4.2 series).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/918&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Minitest&lt;/h3&gt;

&lt;p&gt;Unrelated, Brakeman now uses Minitest instead of test-unit.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/912/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;7231e00bdb4353ee7e91e5f1e60e34cf29b5563e6f7e1e5478223e72568c493a  brakeman-3.3.5.gem
c07e282c2e1733f8d7db4a4ffefe22e7e38a62ddfd750f0866c0b49070cb61c9  brakeman-lib-3.3.5.gem
a7f8e6fa8eb4254b7ad17080180289794a02641b1f2ec362de57cfdb2f1535be  brakeman-min-3.3.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.3 Released</title>
    <link href="https://railroader.org/blog/2016/07/20/brakeman-3-dot-3-3-released/"/>
    <updated>2016-07-20T18:11:00-04:00</updated>
    <id>https://railroader.org/blog/2016/07/20/brakeman-3-dot-3-3-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and internal improvements, although it may find more warnings due to indexing of view helpers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index calls in view helpers&lt;/li&gt;
&lt;li&gt;Process inline template renders (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/672&quot;&gt;#672&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show path when no Rails app found (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about hashes in &lt;code&gt;link_to&lt;/code&gt; hrefs (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/897&quot;&gt;#897&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve return value guesses&lt;/li&gt;
&lt;li&gt;Ignore boolean methods in render paths&lt;/li&gt;
&lt;li&gt;Reduce open redirect duplicates&lt;/li&gt;
&lt;li&gt;Fix SymbolDoS error with unknown Rails version&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;View Helpers&lt;/h3&gt;

&lt;p&gt;Calls in view helpers are now indexed, which means Brakeman will search them for potential vulnerabilities.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/907&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Templates&lt;/h3&gt;

&lt;p&gt;Brakeman will now process inline templates in controllers, if they are using ERB (the default):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;render :inline =&amp;gt; &quot;&amp;lt;%= params[:x].html_safe %&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/905&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails App Path&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;, Brakeman will now display the path it tried to search for a Rails application if it cannot find it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Please supply the path to a Rails application (looking in /some/path/).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/909&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Hashes as URLs&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about obvious hash arguments in the HREF for &lt;code&gt;link_to&lt;/code&gt; calls, as well as handling &lt;code&gt;url_for&lt;/code&gt; better.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/904&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Return Values&lt;/h3&gt;

&lt;p&gt;In some cases, Brakeman attempts to determine the possible return value(s) of a method call.
This release includes a number of improvements to those guesses which may make some warnings easier to understand
and fix some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/896&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Path Booleans&lt;/h3&gt;

&lt;p&gt;The check for dynamic render paths will no longer warn about methods ending in &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/899&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Redirect Duplicates&lt;/h3&gt;

&lt;p&gt;This release refactored much of the warning duplicate tracking, and as such there should be fewer duplicate warnings about open redirects.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/901&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;490bf7b47d4edbb29fd3f87c5dafa50aec2888d495b64275a635df324a8476e9  brakeman-3.3.3.gem
793f1c69cca2681bdd0c98f11307ace4f1a43ed594dd45cbe5b67f0383e76e2f  brakeman-lib-3.3.3.gem
dcc3a75b12f84cac582d383a375d3b85d033e25ba42af051bedcdc8b5377c2c5  brakeman-min-3.3.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.2 Released</title>
    <link href="https://railroader.org/blog/2016/06/10/brakeman-3-dot-3-2-released/"/>
    <updated>2016-06-10T08:49:00-04:00</updated>
    <id>https://railroader.org/blog/2016/06/10/brakeman-3-dot-3-2-released</id>
    <content type="html">&lt;p&gt;This is a bug fix release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.3.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix performance regression in global constant tracking&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Brakeman 3.3.0 introduced a new feature to track constant values across the application. This helped reduce false positives, for example when checking a value against a constant array of values. However, the lookup of constant values was very slow for moderate to large numbers of constants. In some test cases it added up to a minute of scan time. This has been resolved along with some changes to how dynamic constant names are handled.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;--faster&lt;/code&gt; option will turn off global constant tracking entirely.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/891&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;58bb2179de2bd479d32dc2d2018e40caf478916e283ea88089fe0bcb30a55e6c  brakeman-3.3.2.gem
4f72ff02a163d78244554c4a26ea35e88d76dd6b60c3d21573db8518abcba6fc  brakeman-min-3.3.2.gem
c0beeabe95aa693a5273bd48922028f48a190940b18c795813bd0f96068452b4  brakeman-lib-3.3.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to the reporters of the performance issue in the 3.3.0 release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;For commercial support, please consider &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.1 Released</title>
    <link href="https://railroader.org/blog/2016/06/03/brakeman-3-dot-3-1-released/"/>
    <updated>2016-06-03T08:15:00-04:00</updated>
    <id>https://railroader.org/blog/2016/06/03/brakeman-3-dot-3-1-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.3.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved line number accuracy in ERB templates (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow multiple line regex in &lt;code&gt;validates_format_of&lt;/code&gt; (&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid overwriting instance/class methods with same name (&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--force-scan&lt;/code&gt; option (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only consider &lt;code&gt;if&lt;/code&gt; branches in templates&lt;/li&gt;
&lt;li&gt;Support more safe &lt;code&gt;&amp;amp;.&lt;/code&gt; operations&lt;/li&gt;
&lt;li&gt;Avoid warning about SQL injection with &lt;code&gt;quoted_primary_key&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/884&quot;&gt;#884&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Delay loading vendored gems and modifying load path&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;brakeman-lib&lt;/code&gt; gem&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;ERB Template Line Numbers&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; contributed a series of patches to bring Brakeman's handling of ERB/Erubis templates in line with the Rails implementation. This has the effect of correcting some line numbers and fixed processing of &lt;code&gt;case&lt;/code&gt; statements in templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/878&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Multiline Regex Validation&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt; added a change to support multiline extended regular expressions for model validations.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/885&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Class Methods&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt; fixed an issue where class methods and instance methods with the same name on the same class would overwrite each other. This may cause a few warning fingerprints to change, since all method names are now stored as symbols (some were strings before).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/881&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Force Scan&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt; added the &lt;code&gt;--force-scan&lt;/code&gt; option to force Brakeman to scan an application even if it doesn't look like a Rails app.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/879&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Branches in Templates&lt;/h3&gt;

&lt;p&gt;When looking at template output, Brakeman will no longer treat the conditional as output, just the branches. This helps find more potential instances of cross-site scripting.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%= params[:x].html_safe unless this_is_a_bad_idea? %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now Brakeman will just consider the &lt;code&gt;params[:x].html_safe&lt;/code&gt; value which is clearly dangerous.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/883/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Safe Calls&lt;/h3&gt;

&lt;p&gt;Brakeman can now handle more instances of the &quot;safe call&quot; or &quot;lonely&quot; operator such as &lt;code&gt;a&amp;amp;.b ||= 1&lt;/code&gt; and &lt;code&gt;x&amp;amp;.y += z 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/887&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Quoted Primary Key&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about use of &lt;code&gt;quoted_primary_key&lt;/code&gt; in SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/888&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Delayed Load Path Modification&lt;/h3&gt;

&lt;p&gt;Brakeman 3.3.0 started vendoring all its dependencies to avoid conflicts with application dependencies. However, if Brakeman is included in a Gemfile without &lt;code&gt;require: false&lt;/code&gt;, it will still modify the load path and potentially cause conflicts.&lt;/p&gt;

&lt;p&gt;This version delays loading any dependencies until Brakeman actually runs. This is almost like having &lt;code&gt;require: false&lt;/code&gt; automatically.&lt;/p&gt;

&lt;p&gt;Please keep in mind it is really not recommended to include Brakeman in Gemfiles unless it is actually being used as a library. Otherwise it's like mixing your browser's dependencies with your applications. It doesn't make sense.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/889&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;brakeman-lib&lt;/h3&gt;

&lt;p&gt;For those who don't want Brakeman to bundle and vendor its own dependencies, the &lt;a href=&quot;https://rubygems.org/gems/brakeman-lib&quot;&gt;brakeman-lib&lt;/a&gt; gem is identical to the &lt;code&gt;brakeman&lt;/code&gt; gem but without the bundling. Consider using it if the bundling and modified load paths are causing issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/fa310a9b736d858a929715802d98b1a3f0887569&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RailsConf Security Talks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef&quot;&gt;Justin Collins&lt;/a&gt; gave &lt;a href=&quot;https://www.youtube.com/watch?v=DHHHnPwSY5I&amp;amp;feature=youtu.be&amp;amp;t=55m6s&quot;&gt;a lightning talk&lt;/a&gt; about Brakeman and &lt;a href=&quot;https://www.youtube.com/watch?v=3P9naxOfUC4&amp;amp;feature=youtu.be&quot;&gt;a regular talk&lt;/a&gt; about real-world examples of vulnerabilities Rails won't save you from.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/secretmike&quot;&gt;Mike Milner&lt;/a&gt; spoke about &lt;a href=&quot;https://youtu.be/UoiCylwUoq4&quot;&gt;the security breaches of 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/JessRudder&quot;&gt;Jessica Rudder&lt;/a&gt; talked through &lt;a href=&quot;https://youtu.be/2GHWAYys1is&quot;&gt;examples of SQL injection&lt;/a&gt; in ActiveRecord.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;5c22721c8b486fa9d283cabf65c7e77b2f7428056d4d907b7f74a91dd112616a  brakeman-3.3.1.gem
7aa57ed8b42c0cadef09214f5544424659ab3972912137fad37da1a052d8a792  brakeman-lib-3.3.1.gem
95e68202493d8c504ad72276c8bfa46abb1c78c309bc2b80b433a6220f3722eb  brakeman-min-3.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.0 Released</title>
    <link href="https://railroader.org/blog/2016/05/05/brakeman-3-dot-3-0-released/"/>
    <updated>2016-05-05T09:49:00-04:00</updated>
    <id>https://railroader.org/blog/2016/05/05/brakeman-3-dot-3-0-released</id>
    <content type="html">&lt;p&gt;Brakeman 3.3.0 introduces a new packaging method for Brakeman which vendors all dependencies and does not include any gem dependencies in the gemspec. Please test and provide feedback if it does not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.2.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bundle all dependencies in gem&lt;/li&gt;
&lt;li&gt;Return exit code &lt;code&gt;4&lt;/code&gt; if no Rails application is detected (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/869&quot;&gt;#869&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add optional check for secrets in source code (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/201&quot;&gt;#201&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Track constants globally&lt;/li&gt;
&lt;li&gt;Skip if branches with &lt;code&gt;Rails.env.test?&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/862&quot;&gt;#862&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Skip processing obviously false if branches (more broadly)&lt;/li&gt;
&lt;li&gt;Handle HAML &lt;code&gt;find_and_preserve&lt;/code&gt; with a block (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/837&quot;&gt;#837&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Process &lt;code&gt;Array#first&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Allow non-Hash arguments in &lt;code&gt;protect_from_forgery&lt;/code&gt; (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;u&lt;/code&gt; helper (&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about mass assignment and SQL injection with &lt;code&gt;params.slice&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/866&quot;&gt;#866&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;slice&lt;/code&gt; in &lt;code&gt;redirect_to&lt;/code&gt; and &lt;code&gt;link_to&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/832&quot;&gt;#832&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on &lt;code&gt;popen&lt;/code&gt; with array (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/851&quot;&gt;#851&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] When possible, output to /dev/stdout (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Remove nil entries from &lt;code&gt;include_paths&lt;/code&gt; (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Report end lines for issues (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Dependency Bundling&lt;/h3&gt;

&lt;p&gt;In its gem form, Brakeman no longer declares any external dependencies. Its dependencies are bundled with the gem itself. This should prevent the conflicts which sometimes occur when Brakeman is declared as a dependency of a Rails application. The disadvantage is you will no longer be able to update Brakeman dependencies (like RubyParser) without updating Brakeman itself.&lt;/p&gt;

&lt;p&gt;As this is a new way of distributing Brakeman, please report any issues that may arise.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/845&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Exit Code&lt;/h3&gt;

&lt;p&gt;A new exit code has been added for the case when Brakeman does not detect a Rails application.&lt;/p&gt;

&lt;p&gt;For reference, these are Brakeman's current exit codes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; - Normal exit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; - Warnings found (with &lt;code&gt;-z&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; - No Rails application detected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;255&lt;/code&gt; - Error&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/870&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Secrets Check&lt;/h3&gt;

&lt;p&gt;A new optional check has been added to look for hard-coded secrets in the source code. It will warn when constants like &lt;code&gt;PASSWORD&lt;/code&gt; are assigned string literals. To run the new check, use &lt;code&gt;-t Secrets&lt;/code&gt; or &lt;code&gt;-A&lt;/code&gt; to run all checks including optional ones.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/861&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Constant Values&lt;/h3&gt;

&lt;p&gt;This release includes initial support for tracking and matching constants across the application. For example, if a model contains a constant &lt;code&gt;Model::KEYS&lt;/code&gt; which is used elsewhere, Brakeman should be able to track this value. This helps prevents false positives when safe values have been declared as constants.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/855&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skipping Test Code&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore &lt;code&gt;if&lt;/code&gt; branches that check &lt;code&gt;Rails.env.test?&lt;/code&gt;. Additionally, branch skipping behavior (e.g. &lt;code&gt;if false...&lt;/code&gt;) has been expanded to most of Brakeman's processing instead of just in data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/868&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;HAML &lt;code&gt;find_and_preserve&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle uses of &lt;code&gt;find_and_preserve&lt;/code&gt; in HAML with a block.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/839&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Array#first&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;Array#first&lt;/code&gt; will be replaced with the first value in the array when known.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/856&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Forgery Option&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt; provided a fix for when Brakeman encounters a non-Hash argument to &lt;code&gt;protect_from_forgery&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/849&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;u&lt;/code&gt; Helper&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt; fixed XSS false positives when the &lt;code&gt;u&lt;/code&gt; alias for &lt;code&gt;url_encode&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/863&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer &lt;code&gt;slice&lt;/code&gt; False Positives&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn when using &lt;code&gt;params.slice&lt;/code&gt; in mass assignment, SQL injection, links, and open redirects.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/867&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/871&quot;&gt;other changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe popen&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about uses of &lt;code&gt;popen&lt;/code&gt; when the argument is an array, in which case the arguments are escaped.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/854&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Code Climate Engine&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt; provided several improvements to the Code Climate Engine in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;nil&lt;/code&gt; entries from the &lt;code&gt;include_paths&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Force output to stdout when possible&lt;/li&gt;
&lt;li&gt;Report end lines to conform with spec&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01ec64d35218887fc5ea2ae8babc88e9e0e7cc3c161b020725d2b17c4189858  brakeman-3.3.0.gem
f1adce1a696799342dc9f50b51975024060360dc9018358c5d8e34c1c4681bd1  brakeman-min-3.3.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
</feed>
